name: 'Tests'
on:
    push:
        branches: [main]
    pull_request:
        types: [opened, synchronize, reopened]
        branches: [main]
    workflow_dispatch:

jobs:
    test-autogenerated:
        runs-on: ubuntu-latest
        continue-on-error: true
        strategy:
            matrix:
                features:
                    - ${{ vars.FEATURE_COMMON_UTILS}}
                    - ${{ vars.FEATURE_AWS_CLI}}
                    - ${{ vars.FEATURE_DOCKER_IN_DOCKER}}
                    - ${{ vars.FEATURE_DOCKER_OUTSIDE_OF_DOCKER}}
                baseImage:
                    - archlinux:latest
                    - archlinux:base
                    - archlinux:base-devel
                    - archlinux:multilib-devel
        steps:
            - uses: actions/checkout@v4

            - name: 'Install Dependencies'
              run: yarn global add @devcontainers/cli

            - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
              run: make FEATURES=${{ matrix.features }} BASE_IMAGE=${{ matrix.baseImage }} test-autogenerated

    test-scenarios:
        runs-on: ubuntu-latest
        continue-on-error: true
        strategy:
            matrix:
                features:
                    - ${{ vars.FEATURE_COMMON_UTILS}}
                    - ${{ vars.FEATURE_AWS_CLI}}
                    - ${{ vars.FEATURE_DOCKER_IN_DOCKER}}
                    - ${{ vars.FEATURE_DOCKER_OUTSIDE_OF_DOCKER}}
        steps:
            - uses: actions/checkout@v4

            - name: 'Install Dependencies'
              run: yarn global add @devcontainers/cli

            - name: "Generating tests for '${{ matrix.features }}' scenarios"
              run: make FEATURES=${{ matrix.features }} test-scenarios

    test-global:
        runs-on: ubuntu-latest
        continue-on-error: true
        steps:
            - uses: actions/checkout@v4

            - name: 'Install Dependencies'
              run: yarn global add @devcontainers/cli

            - name: 'Testing global scenarios'
              run: make test-global

    validate:
        name: Validate
        runs-on: ubuntu-latest
        needs: [test-autogenerated, test-scenarios, test-global]
        steps:
            - uses: actions/checkout@v4
            - name: 'Validate devcontainer-feature.json files'
              uses: devcontainers/action@v1
              with:
                validate-only: 'true'
                base-path-to-features: './src'
    
    bump-images:
        needs: [validate]
        name: 'Bump Image Version'
        runs-on: ubuntu-latest
        permissions:
          contents: write
          pull-requests: write
          issues: write
        steps:
          - uses: actions/checkout@v4
            with:
              fetch-depth: 0
          - name: 'Install Dependencies'
            run: yarn global add semver
          - name: 'Run Image Version Bump'
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              GH_ACTIONS_USERNAME: ${{ vars.GH_ACTIONS_USERNAME }}
            run: make bump-version
        
    semantic-release:
        name: Semantic Release
        needs: [bump-images]
        runs-on: ubuntu-latest
        permissions:
            contents: write
            issues: write
        steps:
            - uses: actions/checkout@v4
            - name: 'Run semantic-release'
              if: github.repository == 'bartventer/devcontainer-features' && github.event_name == 'push'
              run: |
                  yarn global add semantic-release@17
                  semantic-release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
